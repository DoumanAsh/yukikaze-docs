var searchIndex = {};
searchIndex["yukikaze"] = {"doc":"雪風(Yukikaze)","items":[[0,"header","yukikaze","Headers module",null,null],[4,"ContentEncoding","yukikaze::header","`Content-Encoding` header",null,null],[13,"Identity","","Indicates that no compression is taken place.",0,null],[13,"Gzip","","Indicates compression using Gzip.",0,null],[13,"Deflate","","Indicates compression using Deflate.",0,null],[13,"Brotli","","Indicates compression using Brotli.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_compression","","Returns whether encoding indicates compression or not",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"can_decompress","","Returns whether Yukikaze-sama can decompress.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_str","","Returns textual representation.",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"contentencoding"}}],[0,"client","yukikaze","Client module",null,null],[3,"Client","yukikaze::client","HTTP Client",null,null],[0,"config","","Describes client configuration",null,null],[3,"DefaultCfg","yukikaze::client::config","Default configuration.",null,null],[8,"Config","","Generic config trait.",null,null],[11,"dns_threads","","Specifies number of threads to use for DNS resolve.",1,{"inputs":[],"output":{"name":"usize"}}],[11,"decompress","","Specifies whether to automatically handle decompression",1,{"inputs":[],"output":{"name":"bool"}}],[11,"timeout","","Specifies request timeout.",1,{"inputs":[],"output":{"name":"duration"}}],[11,"config_hyper","","Allows to hook hyper's Client configuration.",1,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[0,"request","yukikaze::client","Request primitives.",null,null],[3,"Request","yukikaze::client::request","Http request.",null,null],[3,"Builder","","Http request builder.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates new request.",2,{"inputs":[{"name":"method"},{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"head","","Creates HEAD request.",2,{"inputs":[{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"get","","Creates GET request.",2,{"inputs":[{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"post","","Creates POST request.",2,{"inputs":[{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"put","","Creates PUT request.",2,{"inputs":[{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"delete","","Creates DELETE request.",2,{"inputs":[{"name":"u"}],"output":{"generics":["builder","invaliduri"],"name":"result"}}],[11,"from","","",2,{"inputs":[{"generics":["body"],"name":"request"}],"output":{"name":"self"}}],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"new","","Starts process of creating request.",3,{"inputs":[{"name":"uri"},{"name":"method"}],"output":{"name":"self"}}],[11,"headers","","Gets reference to headers.",3,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"set_header","","Sets new header to request.",3,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"set_header_if_none","","Sets new header to request, only if it wasn't set previously.",3,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"add_cookie","","Adds cookie.",3,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"content_len","","Sets `Content-Length` header.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"accept_encoding","","Sets `Accept-Encoding` header.",3,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"self"}}],[11,"basic_auth","","Adds authentication header.",3,{"inputs":[{"name":"self"},{"name":"u"},{"name":"option"}],"output":{"name":"self"}}],[11,"query","","Sets request's query by overwriting existing one, if any.",3,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"self"}}],[11,"body","","Creates request with specified body.",3,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"request"}}],[11,"form","","Creates request with Form payload.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["request","error"],"name":"result"}}],[11,"json","","Creates request with JSON payload.",3,{"inputs":[{"name":"self"},{"name":"j"}],"output":{"generics":["request"],"name":"result"}}],[11,"empty","","Creates request with no body.",3,{"inputs":[{"name":"self"}],"output":{"name":"request"}}],[0,"response","yukikaze::client","Response primitives.",null,null],[3,"Response","yukikaze::client::response","HTTP Response",null,null],[3,"FutureResponse","","Ongoing HTTP request.",null,null],[4,"ResponseError","","Describes possible response errors.",null,null],[13,"Timeout","","Response failed due to timeout",4,null],[13,"HyperError","","Hyper Error.",4,null],[0,"extractor","","Extractor module.",null,null],[3,"Etag","yukikaze::client::response::extractor","Extracts ETags from response.",null,null],[3,"RawBody","","Reads raw bytes from HTTP Response",null,null],[3,"FileBody","","Redirects body to file.",null,null],[4,"BodyReadError","","Describes possible errors when reading body.",null,null],[13,"Hyper","","Hyper's error.",5,null],[13,"Overflow","","Hit limit",5,null],[13,"EncodingError","","Unable to decode body as UTF-8",5,null],[13,"JsonError","","Json serialization error.",5,null],[13,"DeflateError","","Error happened during deflate decompression.",5,null],[13,"GzipError","","Error happened during gzip decompression.",5,null],[13,"FileError","","Error happenend when writing to file.",5,null],[4,"Text","","Reads String from HTTP Response.",null,null],[4,"Json","","Reads raw bytes from HTTP Response and deserializes as JSON struct",null,null],[11,"new","","Creates extractor.",6,{"inputs":[{"name":"headervalue"}],"output":{"name":"self"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"new","","Creates new instance.",7,{"inputs":[{"name":"response"}],"output":{"name":"self"}}],[11,"no_decompress","","Disables decompression.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"content_len","","Retrieves length of content to receive, if `Content-Length` exists.",7,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"limit","","Sets limit on body reading. Default is 2mb.",7,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Creates new instance.",8,{"inputs":[{"name":"response"}],"output":{"name":"self"}}],[11,"content_len","","Retrieves length of content to receive, if `Content-Length` exists.",8,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"limit","","Sets limit on body reading. Default is 2mb.",8,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Creates new instance.",9,{"inputs":[{"name":"response"}],"output":{"name":"self"}}],[11,"content_len","","Retrieves length of content to receive, if `Content-Length` exists.",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"limit","","Sets limit on body reading. Default is 2mb.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Creates new instance.",10,{"inputs":[{"name":"response"},{"name":"file"}],"output":{"name":"self"}}],[11,"content_len","","Retrieves length of content to receive, if `Content-Length` exists.",10,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","yukikaze::client::response","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_info","","Returns whether Response's status is informational.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Returns whether Response's status is successful.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirect","","Returns whether Response's status is redirectional.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","","Returns whether Response's status is error..",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Returns whether Response's status is error caused by client.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_internal_error","","Returns whether Response's status is error caused by server.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"content_len","","Retrieves length of content to receive, if `Content-Length` exists.",11,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"content_encoding","","Retrieves `Content-Encoding`, if header is not present `ContentEncoding::Idenity` is assumed.",11,{"inputs":[{"name":"self"}],"output":{"name":"contentencoding"}}],[11,"cookies","","Retrieves cookies from `Set-Cookie` header.",11,{"inputs":[{"name":"self"}],"output":{"generics":["vec","parseerror"],"name":"result"}}],[11,"etag","","Extracts Etags, if any.",11,{"inputs":[{"name":"self"}],"output":{"generics":["etag"],"name":"option"}}],[11,"body","","Extracts body as raw bytes.",11,{"inputs":[{"name":"self"}],"output":{"name":"rawbody"}}],[11,"text","","Extracts body as UTF-8 String",11,{"inputs":[{"name":"self"}],"output":{"name":"text"}}],[11,"json","","Extracts body as JSON",11,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"file","","Extracts body to file.",11,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"filebody"}}],[11,"from","","",11,{"inputs":[{"generics":["body"],"name":"response"}],"output":{"name":"self"}}],[11,"deref","","",11,null],[11,"deref_mut","","",11,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[8,"HttpClient","yukikaze::client","Describes HTTP Client functionality",null,null],[10,"execute","","Starts sending HTTP request.",13,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"futureresponse"}}],[11,"default","","Creates Client with default configuration.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new instance of client with specified configuration.",14,{"inputs":[],"output":{"name":"client"}}],[11,"execute","","",14,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"futureresponse"}}]],"paths":[[4,"ContentEncoding"],[8,"Config"],[3,"Request"],[3,"Builder"],[4,"ResponseError"],[4,"BodyReadError"],[3,"Etag"],[3,"RawBody"],[4,"Text"],[4,"Json"],[3,"FileBody"],[3,"Response"],[3,"FutureResponse"],[8,"HttpClient"],[3,"Client"]]};
initSearch(searchIndex);
